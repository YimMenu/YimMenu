#pragma once

namespace big
{
	enum class CustomWeapon
	{
		NONE,
		CAGE_GUN,
		DELETE_GUN,
		GRAVITY_GUN,
		STEAL_VEHICLE_GUN,
		REPAIR_GUN,
		VEHICLE_GUN
	};

	enum class ContextEntityType : uint8_t
	{
		NONE = 0,
		PED = 1 << 0,
		PLAYER = 1 << 1,
		VEHICLE = 1 << 2,
		OBJECT = 1 << 3,
		SHARED = 1 << 4
	};

	enum class eEntityType
	{
		UNK_0,
		UNK_1,
		UNK_2,
		UNK_3,
		UNK_4,
		VEHICLE,
		PED,
	};

	enum class eTransitionState
	{
		TRANSITION_STATE_EMPTY,
		TRANSITION_STATE_SP_SWOOP_UP,
		TRANSITION_STATE_MP_SWOOP_UP,
		TRANSITION_STATE_CREATOR_SWOOP_UP,
		TRANSITION_STATE_PRE_HUD_CHECKS,
		TRANSITION_STATE_WAIT_HUD_EXIT,
		TRANSITION_STATE_WAIT_FOR_SUMMON,
		TRANSITION_STATE_SP_SWOOP_DOWN,
		TRANSITION_STATE_MP_SWOOP_DOWN,
		TRANSITION_STATE_CANCEL_JOINING,
		TRANSITION_STATE_RETRY_LOADING,
		TRANSITION_STATE_RETRY_LOADING_SLOT_1,
		TRANSITION_STATE_RETRY_LOADING_SLOT_2,
		TRANSITION_STATE_RETRY_LOADING_SLOT_3,
		TRANSITION_STATE_RETRY_LOADING_SLOT_4,
		TRANSITION_STATE_WAIT_ON_INVITE,
		TRANSITION_STATE_PREJOINING_FM_SESSION_CHECKS,
		TRANSITION_STATE_LOOK_FOR_FRESH_JOIN_FM,
		TRANSITION_STATE_LOOK_TO_JOIN_ANOTHER_SESSION_FM,
		TRANSITION_STATE_CONFIRM_FM_SESSION_JOINING,
		TRANSITION_STATE_WAIT_JOIN_FM_SESSION,
		TRANSITION_STATE_CREATION_ENTER_SESSION,
		TRANSITION_STATE_PRE_FM_LAUNCH_SCRIPT,
		TRANSITION_STATE_FM_TEAMFULL_CHECK,
		TRANSITION_STATE_START_FM_LAUNCH_SCRIPT,
		TRANSITION_STATE_FM_TRANSITION_CREATE_PLAYER,
		TRANSITION_STATE_IS_FM_AND_TRANSITION_READY,
		TRANSITION_STATE_FM_SWOOP_DOWN,
		TRANSITION_STATE_POST_BINK_VIDEO_WARP,
		TRANSITION_STATE_FM_FINAL_SETUP_PLAYER,
		TRANSITION_STATE_MOVE_FM_TO_RUNNING_STATE,
		TRANSITION_STATE_FM_HOW_TO_TERMINATE,
		TRANSITION_STATE_START_CREATOR_PRE_LAUNCH_SCRIPT_CHECK,
		TRANSITION_STATE_START_CREATOR_LAUNCH_SCRIPT,
		TRANSITION_STATE_CREATOR_TRANSITION_CREATE_PLAYER,
		TRANSITION_STATE_IS_CREATOR_AND_TRANSITION_READY,
		TRANSITION_STATE_CREATOR_SWOOP_DOWN,
		TRANSITION_STATE_CREATOR_FINAL_SETUP_PLAYER,
		TRANSITION_STATE_MOVE_CREATOR_TO_RUNNING_STATE,
		TRANSITION_STATE_PREJOINING_TESTBED_SESSION_CHECKS,
		TRANSITION_STATE_LOOK_FOR_FRESH_JOIN_TESTBED,
		TRANSITION_STATE_LOOK_FOR_FRESH_HOST_TESTBED,
		TRANSITION_STATE_LOOK_TO_JOIN_ANOTHER_SESSION_TESTBED,
		TRANSITION_STATE_LOOK_TO_HOST_SESSION_TESTBED,
		TRANSITION_STATE_CONFIRM_TESTBED_SESSION_JOINING,
		TRANSITION_STATE_WAIT_JOIN_TESTBED_SESSION,
		TRANSITION_STATE_START_TESTBED_LAUNCH_SCRIPT,
		TRANSITION_STATE_TESTBED_TRANSITION_CREATE_PLAYER,
		TRANSITION_STATE_IS_TESTBED_AND_TRANSITION_READY,
		TRANSITION_STATE_TESTBED_SWOOP_DOWN,
		TRANSITION_STATE_TESTBED_FINAL_SETUP_PLAYER,
		TRANSITION_STATE_MOVE_TESTBED_TO_RUNNING_STATE,
		TRANSITION_STATE_TESTBED_HOW_TO_TERMINATE,
		TRANSITION_STATE_QUIT_CURRENT_SESSION_PROMPT,
		TRANSITION_STATE_WAIT_FOR_TRANSITION_SESSION_TO_SETUP,
		TRANSITION_STATE_TERMINATE_SP,
		TRANSITION_STATE_WAIT_TERMINATE_SP,
		TRANSITION_STATE_KICK_TERMINATE_SESSION,
		TRANSITION_STATE_TERMINATE_SESSION,
		TRANSITION_STATE_WAIT_TERMINATE_SESSION,
		TRANSITION_STATE_TERMINATE_SESSION_AND_HOLD,
		TRANSITION_STATE_TERMINATE_SESSION_AND_MOVE_INTO_HOLDING_STATE,
		TRANSITION_STATE_TEAM_SWAPPING_CHECKS,
		TRANSITION_STATE_RETURN_TO_SINGLEPLAYER,
		TRANSITION_STATE_WAIT_FOR_SINGLEPLAYER_TO_START,
		TRANSITION_STATE_WAITING_FOR_EXTERNAL_TERMINATION_CALL,
		TRANSITION_STATE_TERMINATE_MAINTRANSITION,
		TRANSITION_STATE_WAIT_FOR_DIRTY_LOAD_CONFIRM,
		TRANSITION_STATE_DLC_INTRO_BINK
	};

	enum eVehicleFlags
	{
		TRIGGER_SPAWN_TOGGLE = 1 << 0,
		DESTROYED = 1 << 1,
		HAS_INSURANCE = 1 << 2,
		UNK0 = 1 << 3,
		IMPOUNDED = 1 << 6,
		UNK1 = 1 << 10,
		SPAWN_AT_MORS_MUTUAL = 1 << 11,
		UNK2 = 1 << 16
	};

	enum eVehicleModType
	{
		VMT_SPOILER = 0,
		VMT_BUMPER_F = 1,
		VMT_BUMPER_R = 2,
		VMT_SKIRT = 3,
		VMT_EXHAUST = 4,
		VMT_CHASSIS = 5,
		VMT_GRILL = 6,
		VMT_BONNET = 7,
		VMT_WING_L = 8,
		VMT_WING_R = 9,
		VMT_ROOF = 10,
		VMT_ENGINE = 11,
		VMT_BRAKES = 12,
		VMT_GEARBOX = 13,
		VMT_HORN = 14,
		VMT_SUSPENSION = 15,
		VMT_ARMOUR = 16,
		VMT_NITROUS = 17,
		VMT_TURBO = 18,
		VMT_SUBWOOFER = 19,
		VMT_TYRE_SMOKE = 20,
		VMT_HYDRAULICS = 21,
		VMT_XENON_LIGHTS = 22,
		VMT_WHEELS = 23,
		VMT_WHEELS_REAR_OR_HYDRAULICS = 24,
		VMT_PLTHOLDER = 25,
		VMT_PLTVANITY = 26,
		VMT_INTERIOR1 = 27,
		VMT_INTERIOR2 = 28,
		VMT_INTERIOR3 = 29,
		VMT_INTERIOR4 = 30,
		VMT_INTERIOR5 = 31,
		VMT_SEATS = 32,
		VMT_STEERING = 33,
		VMT_KNOB = 34,
		VMT_PLAQUE = 35,
		VMT_ICE = 36,
		VMT_TRUNK = 37,
		VMT_HYDRO = 38,
		VMT_ENGINEBAY1 = 39,
		VMT_ENGINEBAY2 = 40,
		VMT_ENGINEBAY3 = 41,
		VMT_CHASSIS2 = 42,
		VMT_CHASSIS3 = 43,
		VMT_CHASSIS4 = 44,
		VMT_CHASSIS5 = 45,
		VMT_DOOR_L = 46,
		VMT_DOOR_R = 47,
		VMT_LIVERY_MOD = 48,
		VMT_LIGHTBAR = 49
	};

    enum class ePedTask
    {
        TASK_NONE,
        TASK_FOOT = 1 << 4,
        TASK_UNK = 1 << 5,
        TASK_DRIVING = 1 << 6
    };

	enum class eRemoteEvent
	{
		Bounty = 1294995624,
		CeoBan = -764524031,
		CeoKick = 248967238,
		CeoMoney = 1890277845,
		ClearWantedLevel = -91354030,
		Crash = -1386010354,
		FakeDeposit = 677240627,
		ForceMission = 2020588206,
		GtaBanner = 1572255940,
		MCTeleport = 962740265,
		NetworkBail = 1228916411,
		PersonalVehicleDestroyed = 802133775,
		RemoteOffradar = -391633760,
		RotateCam = 801199324,
		SendToCutscene = 1068259786,
		SendToIsland = -621279188,
		SendToCayo = 1463943751,
		SoundSpam = 1132878564,
		Spectate = -1113591308,
		Teleport = 603406648,
		TransactionError = -1704141512,
		VehicleKick = 578856274,
		Unknown1 = -145306724,
		Unknown2 = -581037897,
		Unknown3 = 1757755807,
		Unknown4 = 436475575,
		Unknown5 = 990606644,
		Unknown6 = 69874647,

		SEC3 = -2113023004,
		SEC6 = 704979198,
		SEC7 = -1715193475,
		SEC8 = 1258808115,
		SEC9 = 2112408256,
		SEC10 = 998716537,
		SEC11 = 163598572,
		SEC12 = -1970125962,
		SEC13 = -1056683619,
		Spaghettios = -393294520,
		ForceMission2 = -1525161016,
		SHKick = -786546101
	};

	enum class eSessionType
	{
		JOIN_PUBLIC,
		NEW_PUBLIC,
		CLOSED_CREW,
		CREW,
		CLOSED_FRIENDS = 6,
		FIND_FRIEND = 9,
		SOLO,
		INVITE_ONLY,
		JOIN_CREW,
		LEAVE_ONLINE = -1
	};

	enum class SpeedoMeter
	{
		DISABLED,
		KMH,
		MPH
	};

	enum class eEntityProofs : uint32_t
	{
		BULLET     = 1 << 4,
		FIRE       = 1 << 5,
		COLLISION  = 1 << 6,
		MELEE      = 1 << 7,
		GOD        = 1 << 8,
		EXPLOSION  = 1 << 11,
		STEAM      = 1 << 15,
		DROWN      = 1 << 16,
		WATER      = 1 << 24,
	};
}